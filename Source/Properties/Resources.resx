<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Day01" xml:space="preserve">
    <value>1429
1368
1661
1687
1593
1495
1565
1500
1635
1845
1645
1999
1415
1054
1930
1774
1405
1993
1757
1623
1675
1665
631
1950
1702
1311
1509
1790
1643
1884
226
1455
1679
1746
1284
1342
1684
1543
1396
1806
1523
1363
1011
1577
1767
1287
1885
1517
1556
1722
1260
1624
1466
1263
1162
1688
1202
1913
1964
1385
1970
1976
1431
858
1748
1544
1438
1300
1926
1587
1376
1939
1039
1639
1539
1491
1631
1521
1564
1507
1637
1534
1713
1533
1118
1356
2003
282
1079
1837
1259
1941
1836
1903
1433
1467
1027
1441
1048
1742
1087
1872
1476
1657
1361
1182
1494
1529
1822
1444
1330
1514
1723
1432
1683
1997
1443
1474
1932
1504
1313
1765
19
1784
1619
992
1560
1680
1626
1558
1899
1293
1676
1161
1140
1341
1597
1628
1611
1302
1269
1241
1952
1591
1726
428
1703
1289
1109
1478
1002
1817
1849
1838
1319
1641
583
1920
1453
1411
1870
1763
1469
1646
1719
1213
1462
1545
1682
1711
18
2004
1252
1620
1559
1315
781
1656
1987
1436
1630
1985
1897
1551
1296
1282
1735
1320
1659
1271
1380
1274
1876
1492
1298
1399
1692
1265
1555
1337</value>
  </data>
  <data name="Day02" xml:space="preserve">
    <value />
  </data>
  <data name="Day03" xml:space="preserve">
    <value />
  </data>
  <data name="Day04" xml:space="preserve">
    <value />
  </data>
  <data name="Day05" xml:space="preserve">
    <value />
  </data>
  <data name="Day06" xml:space="preserve">
    <value />
  </data>
  <data name="Day07" xml:space="preserve">
    <value />
  </data>
  <data name="Day08" xml:space="preserve">
    <value />
  </data>
  <data name="Day09" xml:space="preserve">
    <value />
  </data>
  <data name="Day10" xml:space="preserve">
    <value />
  </data>
  <data name="Day11" xml:space="preserve">
    <value />
  </data>
  <data name="Day12" xml:space="preserve">
    <value />
  </data>
  <data name="Day13" xml:space="preserve">
    <value />
  </data>
  <data name="Day14" xml:space="preserve">
    <value />
  </data>
  <data name="Day15" xml:space="preserve">
    <value />
  </data>
  <data name="Day16" xml:space="preserve">
    <value />
  </data>
  <data name="Day17" xml:space="preserve">
    <value />
  </data>
  <data name="Day18" xml:space="preserve">
    <value />
  </data>
  <data name="Day19" xml:space="preserve">
    <value />
  </data>
  <data name="Day20" xml:space="preserve">
    <value />
  </data>
  <data name="Day21" xml:space="preserve">
    <value />
  </data>
  <data name="Day22" xml:space="preserve">
    <value />
  </data>
  <data name="Day23" xml:space="preserve">
    <value />
  </data>
  <data name="Day24" xml:space="preserve">
    <value />
  </data>
  <data name="Day25" xml:space="preserve">
    <value />
  </data>
</root>